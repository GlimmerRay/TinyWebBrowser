
Note: These specifications can and will change!  I just need to get something defined
so that I can code with clarity.

How do we handle whitespace inside brackets?

    < div> (should fail) COMPLETE
    <div > (should fail) COMPLETE
    < /p>  (should fail) COMPLETE
    </p > (should fail) COMPLETE
    <div class=name > (should fail) COMPLETE

    <div class=name id=ident> (should pass)
    <div class=name  id=ident> (should fail) COMPLETE
    <div class =name> (should fail) COMPLETE
    <div class= name> (should fail) COMPLETE

How do we handle whitespace inside of text nodes?

    White space at the right or left ends is removed.
    Also a text node with white space only becomes the empty string.

    <div>    </div> becomes <div></div>
    <div>   abc</div> becomes <div>abc</div>
    <div>abc   </div> becomes <div>abc</div>
    <div>   abc   </div> becomes <div>abc</div>

    <div>a    c</div> does not become <div>a c</div>

Do attribute values need to be quoted?

    They can be either quoted or unquoted

    <div class="name"> (should pass)
    <div class=name> (should pass)
    Also, the above two ElementNodes should be equal

    <div class='name'> (should fail)

Which characters are valid for attribute values?

    We'll just say letters, digits, and hyphens for now.
    BUT we should abstract the valid character set for easy changing.

    <div class="name> (should fail)
    <div class='name> (should fail)
    <div class=n@me> (should fail)

    <div class=my-name> (should pass)

How do we handle an angled bracket within text?

    <div>And now we have proved that x>y</div>

    (should fail because found > before reaching the end of the text node)
    (remember, the end is marked by <)

    <div>And now we have proved that x<y</div>
    (should fail because < is found while reading a tag name and it is invalid character)

How would we escape such an invalid character?

    NEED TO RESEARCH

What happens with the following?
    <div>
        Some text goes here
        <p></p>
    </div>

    This is valid.  The first child of div is a TextNode and the second is an ElementNodes

What about with this?

    <div>I <span>love</span> to write parsers! (kind of)</div>
    
    Simple. 'I ' is the first child of div, the span is the second '  to write parsers! (kind of)'
    is the third.

    NOTE! making sure the leading space before the second TextNode is preserved.

Does the first tag have to be <html>?

    Yes!

Does the first child of <html> have to be head?

    Yes!

Does the second child of <html> have to be body?

    Yes!

Can there be more than two children of <html>?
    
    No!

What is the valid character set for text nodes?

    Needs to be defined.  But definitely some characters are invalid and
    need to be escaped e.g. < and >

What happens if a tag is never closed?

    Failure!

    <div>
        <div
    </div>

    <abcdefghijklmnopqrstuvwxyz

What happens if a tag pair is never closed?

    Failure!

    <div>
        <p>
    </div>

What about comments?

    For now we're not supporting comments.

Can a tag name start with a hyphen?
    
    No!

Can tags have any name (w/ valid chars) or do we have a predefined set?

    I should probably define a set
    {div, p, span, html, head, body, ...}

    But for now we're not dealing w/ it.

Are tag names case sensitive?

    For now, yes.


We need to test the case where a closing tag doesn't match its corresponding opening tag.

    <div></p>

Can we prove that the parser will never loop infinitely?

    ?????

What happens to whitespace before the leading html tag?

    It gets removed, but is valid.

What happens to anything after the closing html tag?

    It gets ignored, but is valid.

Other attribute related errors.

    <div class=>
    <div class= >
    <div class>
    <div p>

We need attributes to work with quotes as well as without quotes

What if an attribute key is not in our list of valid keys?

We need unit tests for all the little functions.


